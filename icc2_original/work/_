### Example script.  For details please refer to the IC Compiler II Design Planning User Guide and command man pages


################################################################################
#-------------------------------------------------------------------------------
# P G   R I N G   C R E A T I O N
#-------------------------------------------------------------------------------
################################################################################
create_pg_ring_pattern ring_pattern -horizontal_layer QA \
    -horizontal_width {3} -horizontal_spacing {1.5} \
    -vertical_layer QB -vertical_width {3} \
    -vertical_spacing {1.5} -corner_bridge false
set_pg_strategy core_ring -core -pattern \
    {{pattern: ring_pattern}{nets: {VDD VSS VDD_ARR VNW_N VPW_P}}{offset: {2 2}}} \
    -extension {{stop: innermost_ring}}

#compile_pg -strategies core_ring

##################################################
########### QB VDD VSS PATTERN ##################
################################################

create_pg_mesh_pattern pg_vdd_vss_mesh1 \
-parameters {w p t s f} \
-layers {{{vertical_layer: QB} {width: @w} {spacing: @s} {offset: @f}\
{pitch: @p} {trim: @t}}} -via_rule {{intersection: adjacent}{via_master: default}}


set_pg_strategy s_mesh1 \
-pattern {{pattern: pg_vdd_vss_mesh1} {nets: { VDD VSS VDD VDD }} \
{parameters: 4.546 49.824 false 8.88 10 }} \
-core -extension {{stop: outermost_ring}}

# compile_pg -strategies s_mesh1

###################################################
########## QB VDD_ARR VPW_P VNW_N ################
###################################################

create_pg_mesh_pattern pg_vdd_arr_mesh \
-parameters {w p t f s1 s2 s3} \
-layers {{{vertical_layer: QB} {width: @w} {spacing: @s1 @s2 @s1 @s2 @s1 @s3} \
{pitch: @p} {offset: @f} {trim: @t}}} -via_rule {{intersection: adjacent}{via_master: default}}

set_pg_strategy s_mesh2 \
-pattern {{pattern: pg_vdd_arr_mesh} {nets: { VDD_ARR VDD_ARR VDD_ARR VDD_ARR VNW_N VPW_P }} \
{parameters: 1.44 49.824 false 14.993 2 8.546 21.972 }} \
 -core -extension {{stop: outermost_ring}}

# compile_pg -strategies s_mesh2

#####################################################
############# QA VDD_ARR VPW_P VNW_N #################
#####################################################

create_pg_mesh_pattern pg_vdd_arr_mesh2 \
-parameters {w p t f s1 s2 s3 } \
-layers {{{horizontal_layer: QA} {width: @w} {spacing: @s1 @s2 @s1 @s2 @s1 @s2 @s3} \
{pitch: @p} {offset: @f} {trim: @t}}}   -via_rule {{intersection: adjacent}{via_master: default}}

set_pg_strategy s_mesh4 \
-pattern {{pattern: pg_vdd_arr_mesh2} {nets: { VDD_ARR VDD_ARR VDD_ARR VDD_ARR VNW_N VPW_P }} \
{parameters: 1.44 49.824 false 14.993 2 8.546 21.972 }} \
-core -extension {{stop: outermost_ring}}

#compile_pg -strategies s_mesh4

#######################################################
############# QA VDD VSS PATTERN ######################
#######################################################

create_pg_mesh_pattern pg_vss_mesh1 \
-parameters {w p t s f} \
-layers {{{horizontal_layer: QA} {width: @w} {spacing: @s} {offset: @f}\
{pitch: @p} {trim: @t}}} -via_rule {{intersection: adjacent}{via_master: default}}

set_pg_strategy s_mesh3 \
-pattern {{pattern: pg_vss_mesh1} {nets: { VDD VSS VDD VSS }} \
{parameters: 4.546 49.824 false 8.88 10 }} \
-core -extension {{stop: outermost_ring}}

#compile_pg -strategies s_mesh3

#########################################################
############ C1 VDD VSS PATTERN #########################
#########################################################

create_pg_mesh_pattern pg_vdd_vss_C1_mesh \
-parameters {w1 w2 p t s1 s2 s3 f} \
-layers {{{vertical_layer: C1} {width: @w1 @w2} {spacing: @s1 @s2 @s3} {offset: @f}\
{pitch: @p} {trim: @t}}} -via_rule {{intersection: adjacent}{via_master: default}}


set_pg_strategy s_mesh5 \
-pattern {{pattern: pg_vdd_vss_C1_mesh} {nets: { VDD VSS VSS }} \
{parameters: 0.68 0.34  24.779 false 6.240 2.810 18.559 10 }} \
-core

#compile_pg -strategies s_mesh5

#######################################################
############### C1 VPW_P VNW_N #########################
########################################################

create_pg_mesh_pattern pg_vnw_vpw_c1_mesh \
-parameters {w1 w2 p t s1 f} \
-layers {{{vertical_layer: C1} {width: @w1 @w2} {spacing: @s1} {offset: @f}\
{pitch: @p} {trim: @t}}} -via_rule {{intersection: adjacent}{via_master: default}}


set_pg_strategy s_mesh6 \
-pattern {{pattern: pg_vnw_vpw_c1_mesh} {nets: { VNW_N VPW_P }} \
{parameters: 0.046 0.046  24.787 false 0.322 8.909 }} \
-core -extension {{stop: outermost_ring}} 

#compile_pg -strategies s_mesh6

################################################################################
#-------------------------------------------------------------------------------
# P A D   T O   R I N G   P G   C O N N E C T I O N S
#-------------------------------------------------------------------------------
################################################################################
#
#create_pg_macro_conn_pattern hm_pattern -pin_conn_type scattered_pin -layer {M5 M6}
#create_pg_macro_conn_pattern pad_pattern -pin_conn_type scattered_pin -layer {M5 M6}
#
#set all_pg_pads [get_cells * -hier -filter "ref_name==VDD_NS || ref_name==VSS_NS"]
#set_pg_strategy s_pad -macros $all_pg_pads  -pattern {{name: pad_pattern} {nets: {VDD VDD_LOW VSS}}}
#
#
################################################################################
#-------------------------------------------------------------------------------
# P G   M E S H   C R E A T I O N
#-------------------------------------------------------------------------------
################################################################################

#
#-blockage {{{nets: VDD} {block: u0_2 u0_3}}} \


################################################################################
#-------------------------------------------------------------------------------
# M A C R O   P G   C O N N E C T I O N S
#-------------------------------------------------------------------------------
################################################################################

create_pg_macro_conn_pattern hm_pattern -pin_conn_type scattered_pin -layer {C4 C5}
set toplevel_hms [filter_collection [get_cells * -physical_context] "is_hard_macro == true"]
set_pg_strategy macro_con -macros $toplevel_hms -pattern {{name: hm_pattern} {nets: {VDD VSS}}}




#
################################################################################
#-------------------------------------------------------------------------------
# P G   S T R I P E S   I N   N A R R O W   M A C R O   C H A N N E L           
#-------------------------------------------------------------------------------
################################################################################
set blockages_count [sizeof_collection [get_placement_blockages -quiet ]]
if {$blockages_count} {
         write_def -objects [get_placement_blockages ] placement_blockages.def                                                                                                                                                                        }
remove_placement_blockages -all

set voltage_Area DEFAULT_VA

set hardMacros [get_cells -hierarchical -filter "design_type==macro" -within [get_voltage_areas $voltage_Area] -quiet ]
append_to_collection hardMacros [get_cells -hierarchical -filter "design_type==macro" -intersect [get_voltage_areas $voltage_Area]]

foreach_in_collection hardMacros $hardMacros {
set myBox [get_attribute $hardMacros boundary_bbox]
set macroName [get_attribute $hardMacros name]

 set haloL 0.6
 set haloR 0.6
 set haloT 0.6
 set haloB 0.6

set x1 [expr [lindex [lindex $myBox 0] 0] - $haloL ]
set y1 [expr [lindex [lindex $myBox 0] 1] - $haloB ]
set x2 [expr [lindex [lindex $myBox 1] 0] + $haloR ]
set y2 [expr [lindex [lindex $myBox 1] 1] + $haloT ]

set ll [list [expr $x1] [expr $y1]]
set ur [list [expr $x2] [expr $y2]]
set rowBb [list $ll $ur]
puts "Adding Hard placement blockage :$macroName $x1:$y1-$x2:$y2"

create_placement_blockage -type hard -boundary $rowBb
        }


create_pg_special_pattern channelPattern -insert_channel_straps { \
{layer: C1}{direction: vertical}{width: 0.34}{channel_threshold: 0.5} \
{check_one_layer: true}{channel_between_objects: placement_blockage region_boundary voltage_area}}
set_pg_strategy s_channel -voltage_areas $voltage_Area  -pattern {{pattern: channelPattern} {nets: VDD VSS}}

#compile_pg -strategies s_channel

#-------------------------------------------------------------------------------
# S T A N D A R D    C E L L    R A I L    I N S E R T I O N
#-------------------------------------------------------------------------------
################################################################################
create_pg_std_cell_conn_pattern \
    std_cell_rail  \
    -layers {M1} \
    -rail_width 0.08
set_pg_strategy rail_strat -core \
    -pattern {{name: std_cell_rail} {nets: VDD VSS} }

set_pg_strategy_via_rule r2 \
   -via_rule { \
        {{{strategies: s_mesh5}{layers: C1}}{{strategies: rail_strat}{layers: M1}} \
		{via_master: default}} \
        {{{strategies: s_mesh6}{layers: C1}}{{strategies: rail_strat}} \
                {via_master: default}} \
        {{{strategies: s_mesh1 s_mesh2 }{layers: QB}}{{strategies: s_mesh3 s_mesh4}{layers: QA}} \
                {via_master: default}} \
        {{{strategies: s_mesh4 }}{{strategies: s_mesh6}} \
		{via_master: default}} \
        {{{strategies: s_mesh3 }}{{strategies: s_mesh5}}
		{via_master: default}} \
        {{{strategies: s_channel}{layers C1}}{{strategies: s_mesh5}} \
                {via_master: default}} \
                {{intersection: undefined}{via_master: NIL}} \
		}

compile_pg -viia_rule r2
#{{{strategies: s_mesh1 s_mesh2 }{layers: QB}}{{strategies: s_mesh3 s_mesh4}{layers: QA}} \
                {via_master: default}} \

#set_pg_strategy_via_rule r3 \
#   -via_rule { \
#        {{{strategies: s_mesh1 s_mesh2}{layers: QA QB}{existing: core_ring}} \
#                {via_master: default}} \
#                {{intersection: undefined}{via_master: NIL}} \
#                }
#                {via_master: default}} {{strategies: core_ring} {strategies: s_mesh1}} {{intersection: undefined}{via_master: NIL}} 

#compile_pg -via_rule r2
#set_pg_strategy_via_rule r2 \
#   -via_rule { \
#        {{{strategies: s_mesh1}{layers: C2}}{{strategies: rail_strat}{layers: M1}} \
#                {via_master: default}} \
#         {{strategies: core_ring}{strategies: s_mesh1}} \
#        {{intersection: undefined}{via_master: NIL}} \
#   }
#   set_pg_strategy_via_rule r3 \
#                 -via_rule { \
#                                  { {{strategies: s1} {layers: M2}} \
#                                                     {{strategies: s2} {layers: M4}}{via_master: {VIA23 VIA34}} \
#                                                                        {between_parallel: true} } \
#                                                                                         { {intersection: undefined}{via_master: NIL} } \
#                                                                                                     }
#
