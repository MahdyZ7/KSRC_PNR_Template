##########################################################################################
# Tool: IC Compiler II
# Script: Makefile_pnr
# Version: R-2020.09-SP4
# Copyright (C) 2014-2021 Synopsys, Inc. All rights reserved.
##########################################################################################

#ICC2_EXEC = /apps/synopsys/ic-compiler2/R-2020.09-SP6/bin/icc2_shell
#ICC2_EXEC = /apps/synopsys/ic-compiler2/S-2021.06-SP4/bin/icc2_shell
ICC2_EXEC = /usr/synopsys/icc2/R-2020.09-SP6/bin/icc2_shell
FM_EXEC = fm_shell
VC_LP_EXEC = vc_static_shell
LOGS_DIR = logs_icc2
OPTIONS =

## Optional: Specify design library if you want backup step and clean step to use it
## CAUTION: if added, the clean step will delete it
DESIGN_LIB =

console:
	$(ICC2_EXEC)

setup:
	test -d $(LOGS_DIR)	|| mkdir $(LOGS_DIR)
	date > setup

init_design: setup
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/init_design.tcl | tee -i $(LOGS_DIR)/init_design.log

place_opt: setup init_design
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/place_opt.tcl | tee -i $(LOGS_DIR)/place_opt.log

clock_opt_cts: setup place_opt
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/clock_opt_cts.tcl | tee -i $(LOGS_DIR)/clock_opt_cts.log

clock_opt_opto: setup clock_opt_cts
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/clock_opt_opto.tcl | tee -i $(LOGS_DIR)/clock_opt_opto.log

route_auto: setup clock_opt_opto
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/route_auto.tcl | tee -i $(LOGS_DIR)/route_auto.log

route_opt: setup route_auto
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/route_opt.tcl | tee -i $(LOGS_DIR)/route_opt.log

chip_finish: setup route_opt
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/chip_finish.tcl | tee -i $(LOGS_DIR)/chip_finish.log

icv_in_design: setup chip_finish
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/icv_in_design.tcl | tee -i $(LOGS_DIR)/icv_in_design.log

all: icv_in_design
	date > all

# Remember to also set WRITE_DATA_FROM_BLOCK_NAME to your desired step as input; default is icv_in_design
write_data: setup 
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/write_data.tcl | tee -i $(LOGS_DIR)/write_data.log

################################################################################################################
## Optional Steps for Flat P&R
################################################################################################################
# Timing Closure ECO flow
# The timing closure ECO target supports both eco_opt and a user provided change file.  This is controlled via
# the PT_ECO_CHANGE_FILE variable in design_setup.tcl.  If filler cells or metal fill exists in the source design,
# they are automatically reinserted after the ECO.
timing_eco: setup
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/timing_eco.tcl | tee -i $(LOGS_DIR)/timing_eco.log

# Functional ECO flow
# The functional ECO target supports both freeze_silicon and MPI.  If filler cells or metal fill exists in the 
# source design, they are automatically reinserted after the ECO.  It is recommended that functional ECOs are 
# followed by a timing closure ECO.
functional_eco: setup
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/functional_eco.tcl | tee -i $(LOGS_DIR)/functional_eco.log

# Redhawk in-design analysis
# Specify the starting block using the REDHAWK_IN_DESIGN_PNR_FROM_BLOCK_NAME variable in design_setup.tcl
redhawk_in_design_pnr: setup
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/redhawk_in_design_pnr.tcl | tee -i $(LOGS_DIR)/redhawk_in_design_pnr.log

# For RedHawk-SC in-design analysis
# Specify the starting block using the REDHAWK_IN_DESIGN_PNR_FROM_BLOCK_NAME variable in design_setup.tcl
rhsc_in_design_pnr: setup
	$(FC_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/rhsc_in_design_pnr.tcl | tee -i $(LOGS_DIR)/rhsc_in_design_pnr.log

# Formality
fm: setup write_data
	$(FM_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/fm.tcl | tee -i $(LOGS_DIR)/fm.log

# Verification Compiler Low Power Static Signoff (VC LP)
vc_lp: setup write_data
	$(VC_LP_EXEC) -f ./rm_icc2_pnr_scripts/vc_lp.tcl | tee -i $(LOGS_DIR)/vc_lp.log

################################################################################################################
# Utilities
################################################################################################################
# Generates a summary report and csv file after any stage of the flow. 
# Running it multiple times will overwrite previous reports with the new report.
summary: setup
	$(ICC2_EXEC) $(OPTIONS) -f ./rm_icc2_pnr_scripts/summary.tcl | tee -i $(LOGS_DIR)/summary.log

##Backup
BACKUP  = BACKUP.`date "+%m_%d_%H_%M"`
backup:
	rm -rf $(BACKUP)
	mkdir -p $(BACKUP)
	cp -rf $(DESIGN_LIB) $(LOGS_DIR) $(BACKUP)

##Clean
clean:
	rm -f setup init_design place_opt clock_opt_cts clock_opt_opto route_auto route_opt chip_finish icv_in_design write_data all timing_eco functional_eco redhawk_in_design_pnr rhsc_in_design_pnr fm vc_lp summary

clean_all: clean
	rm -rf $(LOGS_DIR) $(DESIGN_LIB)

